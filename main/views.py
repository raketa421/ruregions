from django.shortcuts import render
from slovar import d

regions = ["Адыгея", "Алтай", "Алтайский край", "Амурская область", "Архангельская область", "Астраханская область",
        "Башкортостан", "Белгородская область", "Брянская область", "Бурятия", "Владимирская область", "Волгоградская область",
        "Вологодская область", "Воронежская область", "Дагестан", "Еврейская АО", "Забайкальский край", "Ивановская область",
        "Ингушетия", "Иркутская область", "Кабардино-Балкария","Калининградская область", "Калмыкия", "Калужская область",
        "Камчатский край", "Карачаево-Черкесия", "Карелия", "Кемеровская область", "Кировская область", "Коми", "Костромская область",
        "Краснодарский край", "Красноярский край", "Крым", "Курганская область", "Курская область", "Ленинградская область",
        "Липецкая область", "Магаданская область", "Марий Эл", "Мордовия", "Московская область", "Мурманская область", 
        "Ненецкий АО", "Нижегородская область", "Новгородская область", "Новосибирская область", "Омская область", "Оренбургская область",
        "Орловская область", "Пензенская область", "Пермский край", "Приморский край", "Псковская область", "Ростовская область",
        "Рязанская область", "Самарская область", "Саратовская область", "Сахалинская область", "Свердловская область",
         "Северная Осетия", "Смоленская область", "Ставропольский край", "Тамбовская область", "Татарстан", "Тверская область",
        "Томская область", "Тульская область", "Тыва", "Тюменская область", "Удмуртия", "Ульяновская область", "Хабаровский край",
        "Хакасия", "Ханты-Мансийский АО", "Челябинская область", "Чечня", "Чувашия", "Чукотский АО", "Якутия", "Ямало-Ненецкий АО",
        "Ярославская область"]
    

           
grouped_regions = {}

for region in regions:
    first_letter = region[0].upper()
    if first_letter not in grouped_regions:
        grouped_regions[first_letter] = []
    grouped_regions[first_letter].append(region)


def main(request):
    context = {
        'grouped_regions': grouped_regions,
    }
    return render(request, 'main.html', context)


def reg(request):
    regname = request.GET.get('reg')
    s = d[regname]
    context = {
        'name': regname,
        'list': s
    }
    return render(request, 'region.html',context)

def search(request):
    poisk = request.GET.get('s')
    for i in d.items():
        if i[0].lower() == poisk.lower():
            name = i[0]
            s = d[name]
            context = {
                'name': name,
                'list': s
            }
            return render(request, 'region.html',context)
    else:
        context = {
            'name' : poisk
        }
        return render(request,'error.html', context)